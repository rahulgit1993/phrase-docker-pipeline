events {
    worker_connections  1024;
}

http {
    server_tokens off;

    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Original-Forwarded-For;
    real_ip_recursive on;

    upstream flask_app {
        server flask:5000;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name _;

        # Use the self-signed SSL certificate and key
        ssl_certificate /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        location ~* /(prepare-for-deploy|ready-for-deploy) {

           # allow 192.168.0.0/16;
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            deny all;
        }

        location ~* /admin {
            auth_basic  "Administratorâ€™s Area";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
